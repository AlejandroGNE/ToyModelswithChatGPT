{"docstore/metadata": {"9692028c-4835-4831-8962-2186c4132bf2": {"doc_hash": "f8d8fa3af33a01acb2e5bfa184d1fc1ec6642b421987b569952260dec06898ec"}, "8c7045ea-93bd-4335-864f-e3dc00bb30dc": {"doc_hash": "7ecdb8ac914da7530c8a3bb4ac61bfe566e1dde379c38899d38dfe1891d79710"}, "6f48a233-66d3-4a18-bd24-8b5138e913c2": {"doc_hash": "f0a678bcc23183d1f2df1f9190cf3142c6db9bc0c8beb7282c9373ecb8e8c683"}, "52ed7ec3-007b-4e3e-9f22-8bfd3023a5e0": {"doc_hash": "3e92eafd7de2d9d972fa833f16705044f4343bf0b1c8e45631802ceb0956b47e"}, "13ceb073-301a-4863-b0dc-9b0edef12e50": {"doc_hash": "5351c8f31811eeccb041efafd27c3c147c86956a8189e2e73198754fd1e72892"}, "d5c14032-d54d-45c8-95a4-f5409c4d628e": {"doc_hash": "af59bbdfeec4f14fcf6eaa248ca96e97a8c058050d77aec0a46482e6197ecf60"}, "0c498490-5d94-4b0d-a7e1-3c52e132d381": {"doc_hash": "42261cc217bdbe4c0ebc6d7ce4c2d0437268c2c5a97e7f808062a7b7264f1c35"}, "a3d634af-6edf-46eb-8480-c95aacdf23ff": {"doc_hash": "ae287caa21a0afceb70403a715cc7b09573b55ebd42cab6b1e58d610edea1ad2"}, "2dbc25b2-0aeb-478c-a5ad-6dce6620e3f7": {"doc_hash": "fcd7cbf09a0fccad4b8d94ed870591895efe63cb8f9a01ece555f85188ebd7b6"}, "54703e97-4080-4f65-b139-e137eed358da": {"doc_hash": "15e6461990706d57b87394f77e75063ed2c1b52d75b264978a7c00ea4562aa09", "ref_doc_id": "9692028c-4835-4831-8962-2186c4132bf2"}, "2faed600-106e-4ad4-b51b-c2eb63943cd0": {"doc_hash": "f1dd3dc331490281543d8225483c623a3973105249b00f9ca976c2438b640a71", "ref_doc_id": "8c7045ea-93bd-4335-864f-e3dc00bb30dc"}, "1fea5416-ad32-40ed-8825-8882d06c7f9d": {"doc_hash": "049280160d60d94554dafbc5baa2becd01cd13290b8c4e0612245ad3bee1ef17", "ref_doc_id": "6f48a233-66d3-4a18-bd24-8b5138e913c2"}, "121fad45-7bb3-40d7-9478-cc3b6b49fc2a": {"doc_hash": "9a5d67a22005dea464909c1021d6685e3a5faa9f1ece9b2e95354149c3a7da85", "ref_doc_id": "52ed7ec3-007b-4e3e-9f22-8bfd3023a5e0"}, "c3021ce6-331c-4b69-9317-923f2b61d439": {"doc_hash": "a4f4208a73318f30c41c7901d14d6bc931f5e5d98f2ff3ac4c59d8ee11d3aa70", "ref_doc_id": "13ceb073-301a-4863-b0dc-9b0edef12e50"}, "e75784ce-a552-454f-8c42-4add859421e8": {"doc_hash": "eb6207f54816ebe7d2056f720bf7b1fd3ebdb1bcd01a326a400ed1a65c9530db", "ref_doc_id": "d5c14032-d54d-45c8-95a4-f5409c4d628e"}, "4d003780-9b05-4c27-9eb1-212487b17640": {"doc_hash": "84fb2e9dd54c2214931611419f8db33f75c5d06616ebfd66c01d4eab9009d90e", "ref_doc_id": "0c498490-5d94-4b0d-a7e1-3c52e132d381"}, "79c45110-266b-4cdb-9c53-b3edc05f53da": {"doc_hash": "cdb1c918f9531f536e45af27be99b91425c9bf585a5126d1cc2910572628280e", "ref_doc_id": "a3d634af-6edf-46eb-8480-c95aacdf23ff"}, "a2a61adc-10d2-48af-b781-ef74a736f531": {"doc_hash": "b3cd1bac859d1a4cd97b890d9eccb6e94f8a010059d5d53e9b6b2c7034e5c097", "ref_doc_id": "a3d634af-6edf-46eb-8480-c95aacdf23ff"}, "5d9f919d-62eb-47aa-99a3-58fca3aa84c3": {"doc_hash": "09706dde6aaf53548d490f70dfb555a225c90dea59a9bdc9f18c5231783acd87", "ref_doc_id": "2dbc25b2-0aeb-478c-a5ad-6dce6620e3f7"}}, "docstore/data": {"54703e97-4080-4f65-b139-e137eed358da": {"__data__": {"id_": "54703e97-4080-4f65-b139-e137eed358da", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9692028c-4835-4831-8962-2186c4132bf2", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "f8d8fa3af33a01acb2e5bfa184d1fc1ec6642b421987b569952260dec06898ec", "class_name": "RelatedNodeInfo"}}, "text": "Comprehensive Guide for Building, Modifying, and Running PLEXOS Models using the PLEXOS API in Python", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 103, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2faed600-106e-4ad4-b51b-c2eb63943cd0": {"__data__": {"id_": "2faed600-106e-4ad4-b51b-c2eb63943cd0", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c7045ea-93bd-4335-864f-e3dc00bb30dc", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "7ecdb8ac914da7530c8a3bb4ac61bfe566e1dde379c38899d38dfe1891d79710", "class_name": "RelatedNodeInfo"}}, "text": "Introduction\n\r\nThis document serves as a comprehensive guide to using the PLEXOS API to build, modify, and run PLEXOS models using Python. It encapsulates the knowledge gained from various Python scripts and provides a structured approach to handling PLEXOS models. This guide will cover the fundamental tasks, essential actions, and best practices for working with the PLEXOS API.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fea5416-ad32-40ed-8825-8882d06c7f9d": {"__data__": {"id_": "1fea5416-ad32-40ed-8825-8882d06c7f9d", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f48a233-66d3-4a18-bd24-8b5138e913c2", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "f0a678bcc23183d1f2df1f9190cf3142c6db9bc0c8beb7282c9373ecb8e8c683", "class_name": "RelatedNodeInfo"}}, "text": "Fundamental Tasks and Building Blocks", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 39, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "121fad45-7bb3-40d7-9478-cc3b6b49fc2a": {"__data__": {"id_": "121fad45-7bb3-40d7-9478-cc3b6b49fc2a", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "52ed7ec3-007b-4e3e-9f22-8bfd3023a5e0", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "3e92eafd7de2d9d972fa833f16705044f4343bf0b1c8e45631802ceb0956b47e", "class_name": "RelatedNodeInfo"}}, "text": "Atoms (Basic Tasks)\n1. **Connect to a Database**:\r\n   - Establish a connection to a PLEXOS database using the `DatabaseCore` class.\r\n   ```python\r\n   def connect_to_database(file_path):\r\n       db = DatabaseCore()\r\n       db.DisplayAlerts = False\r\n       db.Connection(file_path)\r\n       return db\r\n   ```\r\n\r\n2. **Add Category**:\r\n   - Add a new category to a specified class if it does not already exist.\r\n   ```python\r\n   def add_category_if_not_exists(db, class_name, category_name):\r\n       classes = db.FetchAllClassIds()\r\n       category_exists = db.CategoryExists(classes[class_name], category_name)\r\n       if not category_exists:\r\n           db.AddCategory(classes[class_name], category_name)\r\n   ```\r\n\r\n3. **Add Object**:\r\n   - Add a new object to a specified class with optional category and description.\r\n   ```python\r\n   def add_object(db, name, class_name, add_system_membership=True, category=None, description=None):\r\n       classes = db.FetchAllClassIds()\r\n       db.AddObject(name, classes[class_name], add_system_membership, category, description)\r\n   ```\r\n\r\n4. **Add Membership**:\r\n   - Establish a membership relationship between two objects.\r\n   ```python\r\n   def add_membership(db, collection_name, parent_name, child_name):\r\n       collections = db.FetchAllCollectionIds()\r\n       db.AddMembership(collections[collection_name], parent_name, child_name)\r\n   ```\r\n\r\n5. **Add Property**:\r\n   - Add a property to a specified membership.\r\n   ```python\r\n   def add_property(db, membership_id, enum_id, band_id, value, date_from=None, date_to=None, variable=None, data_file=None, pattern=None, scenario=None, action=None, period_type=PeriodEnum.Interval):\r\n       db.AddProperty(membership_id, enum_id, band_id, value, date_from, date_to, variable, data_file, pattern, scenario, action, period_type)\r\n   ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3021ce6-331c-4b69-9317-923f2b61d439": {"__data__": {"id_": "c3021ce6-331c-4b69-9317-923f2b61d439", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "13ceb073-301a-4863-b0dc-9b0edef12e50", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "5351c8f31811eeccb041efafd27c3c147c86956a8189e2e73198754fd1e72892", "class_name": "RelatedNodeInfo"}}, "text": "Molecules (Composite Tasks)\n1. **Add Generator**:\r\n   - Add a new generator with specified properties and memberships.\r\n   ```python\r\n   def add_generator(db, generator_name, generator_type, properties):\r\n       add_category_if_not_exists(db, \"Generator\", generator_type.capitalize())\r\n       add_object(db, generator_name, \"Generator\", True, generator_type.capitalize(), f'{generator_name} {generator_type.capitalize()} Generator')\r\n       add_membership(db, \"GeneratorNodes\", generator_name, \"101\")\r\n       add_membership(db, \"GeneratorFuels\", generator_name, properties['fuel'])\r\n       add_membership(db, \"ReserveGenerators\", \"Spin Up\", generator_name)\r\n       \r\n       mem_id = db.GetMembershipID(db.FetchAllCollectionIds()[\"SystemGenerators\"], 'System', generator_name)\r\n       for prop, value in properties['properties'].items():\r\n           add_property(db, mem_id, db.FetchAllPropertyEnums()[prop], 1, value)\r\n   ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 927, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e75784ce-a552-454f-8c42-4add859421e8": {"__data__": {"id_": "e75784ce-a552-454f-8c42-4add859421e8", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5c14032-d54d-45c8-95a4-f5409c4d628e", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "af59bbdfeec4f14fcf6eaa248ca96e97a8c058050d77aec0a46482e6197ecf60", "class_name": "RelatedNodeInfo"}}, "text": "Essential Actions for PLEXOS API\n\r\n1. **Load PLEXOS Assemblies**:\r\n   - Ensure the necessary PLEXOS assemblies are loaded.\r\n   ```python\r\n   plexos_path = 'C:/Program Files/Energy Exemplar/PLEXOS 10.0 API'\r\n   sys.path.append(plexos_path)\r\n   clr.AddReference('PLEXOS_NET.Core')\r\n   clr.AddReference('EEUTILITY')\r\n   clr.AddReference('EnergyExemplar.PLEXOS.Utility')\r\n   ```\r\n\r\n2. **Handle Database Connection**:\r\n   - Properly manage opening and closing database connections.\r\n   ```python\r\n   def connect_to_database(file_path):\r\n       db = DatabaseCore()\r\n       db.DisplayAlerts = False\r\n       db.Connection(file_path)\r\n       return db\r\n   \r\n   def close_database(db):\r\n       db.Close()\r\n   ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d003780-9b05-4c27-9eb1-212487b17640": {"__data__": {"id_": "4d003780-9b05-4c27-9eb1-212487b17640", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c498490-5d94-4b0d-a7e1-3c52e132d381", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "42261cc217bdbe4c0ebc6d7ce4c2d0437268c2c5a97e7f808062a7b7264f1c35", "class_name": "RelatedNodeInfo"}}, "text": "Best Practices\n\r\n1. **Error Handling**:\r\n   - Implement robust error handling to manage potential issues with database connections and property additions.\r\n   ```python\r\n   try:\r\n       db.Connection(file_path)\r\n   except Exception as e:\r\n       print(f\"Error connecting to database: {e}\")\r\n   ```\r\n\r\n2. **Debugging**:\r\n   - Use print statements to debug and verify the data being fetched and manipulated.\r\n   ```python\r\n   print(f\"Classes fetched: {classes}\")\r\n   print(f\"Collections fetched: {collections}\")\r\n   ```\r\n\r\n3. **Documentation**:\r\n   - Document each function with docstrings to explain its purpose, arguments, and return values.\r\n   ```python\r\n   def connect_to_database(file_path):\r\n       \"\"\"\r\n       Connect to a PLEXOS database.\r\n       \r\n       Args:\r\n           file_path (str): Path to the PLEXOS database file.\r\n       \r\n       Returns:\r\n           DatabaseCore: Connected PLEXOS database object.\r\n       \"\"\"\r\n       db = DatabaseCore()\r\n       db.DisplayAlerts = False\r\n       db.Connection(file_path)\r\n       return db\r\n   ```\r\n\r\n4. **Modularity**:\r\n   - Break down tasks into smaller, reusable functions to improve readability and maintainability.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79c45110-266b-4cdb-9c53-b3edc05f53da": {"__data__": {"id_": "79c45110-266b-4cdb-9c53-b3edc05f53da", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3d634af-6edf-46eb-8480-c95aacdf23ff", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "ae287caa21a0afceb70403a715cc7b09573b55ebd42cab6b1e58d610edea1ad2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2a61adc-10d2-48af-b781-ef74a736f531", "node_type": "1", "metadata": {}, "hash": "8e5799a98a133ab919c07bc70c4efab64eb7c1d874ea159988614f04e5c398e6", "class_name": "RelatedNodeInfo"}}, "text": "Example Script\n\r\nHere is the latest version of the script that successfully creates multiple PLEXOS XML files with different generator configurations.\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nCreate multiple PLEXOS XML files with different generator configurations\r\n\r\nThis script creates multiple PLEXOS XML files with different generator configurations.\r\nThe script performs the following key functions:\r\n- Connect to a PLEXOS dataset and update it.\r\n- Loop over different generator configurations, creating a new XML file for each configuration.\r\n- Add generator objects with different properties to the dataset.\r\n- Save the updated dataset to a new XML file for each generator configuration.\r\n\r\nP10 Tested\r\n\r\nv0 - Created on 2024-07-31 at 11:20:00 by Alejandro Elenes\r\n\"\"\"\r\n\r\nimport os\r\nimport sys\r\nimport clr\r\nfrom datetime import datetime\r\nfrom shutil import copyfile\r\n\r\n# Load PLEXOS assemblies\r\nplexos_path = 'C:/Program Files/Energy Exemplar/PLEXOS 10.0 API'\r\nsys.path.append(plexos_path)\r\nclr.AddReference('PLEXOS_NET.Core')\r\nclr.AddReference('EEUTILITY')\r\nclr.AddReference('EnergyExemplar.PLEXOS.Utility')\r\n\r\n# .NET related imports\r\nfrom PLEXOS_NET.Core import DatabaseCore\r\nfrom EEUTILITY.Enums import *\r\nfrom EnergyExemplar.PLEXOS.Utility.Enums import *\r\nfrom System import DateTime\r\n\r\ndef connect_to_database(file_path):\r\n    db = DatabaseCore()\r\n    db.DisplayAlerts = False\r\n    db.Connection(file_path)\r\n    return db\r\n\r\ndef close_database(db):\r\n    db.Close()\r\n\r\ndef add_category_if_not_exists(db, class_name, category_name):\r\n    classes = db.FetchAllClassIds()\r\n    category_exists = db.CategoryExists(classes[class_name], category_name)\r\n    if not category_exists:\r\n        db.AddCategory(classes[class_name], category_name)\r\n\r\ndef add_object(db, name, class_name, add_system_membership=True, category=None, description=None):\r\n    classes = db.FetchAllClassIds()\r\n    db.AddObject(name, classes[class_name], add_system_membership, category, description)\r\n\r\ndef add_membership(db, collection_name, parent_name, child_name):\r\n    collections = db.FetchAllCollectionIds()\r\n    db.AddMembership(collections[collection_name], parent_name, child_name)\r\n\r\ndef add_property(db, membership_id, enum_id, band_id, value, date_from=None, date_to=None, variable=None, data_file=None, pattern=None, scenario=None, action=None, period_type=PeriodEnum.Interval):\r\n    db.AddProperty(membership_id, enum_id, band_id, value, date_from, date_to, variable, data_file, pattern, scenario, action, period_type)\r\n\r\ndef add_generator(db, generator_name, generator_type, properties):\r\n    add_category_if_not_exists(db, \"Generator\", generator_type.capitalize())\r\n    add_object(db, generator_name, \"Generator\", True, generator_type.capitalize(), f'{generator_name} {generator_type.capitalize()} Generator')\r\n    add_membership(db, \"GeneratorNodes\", generator_name, \"101\")\r\n    add_membership(db, \"GeneratorFuels\", generator_name, properties['fuel'])\r\n    add_membership(db, \"ReserveGenerators\", \"Spin Up\", generator_name)\r\n    \r\n    mem_id = db.GetMembershipID(db.FetchAllCollectionIds()[\"SystemGenerators\"], 'System', generator_name)\r\n    for prop, value in properties['properties'].items():\r\n        add_property(db, mem_id, db.FetchAllPropertyEnums()[prop], 1, value)\r\n\r\ndef main():\r\n    file_path = 'C:/Users/alejandro.elenes/Documents/GitHub/Python-PLEXOS-API/new.xml'\r\n    generator_properties = {\r\n        'nuclear': {\r\n            'fuel': 'Uranium',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 1000.0,\r\n                'SystemGenerators.MinStableLevel': 900.0,\r\n                'SystemGenerators.HeatRate': 10.0,\r\n                'SystemGenerators.StartCost': 500000.0,\r\n                'SystemGenerators.MinUpTime': 48.0,\r\n                'SystemGenerators.MinDownTime': 24.0,\r\n            }\r\n        },\r\n        'gas': {\r\n            'fuel': 'Natural Gas',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 500.0,\r\n                'SystemGenerators.MinStableLevel': 100.0,\r\n                'SystemGenerators.HeatRate': 8.0,\r\n                'SystemGenerators.StartCost': 100000.0,", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2a61adc-10d2-48af-b781-ef74a736f531": {"__data__": {"id_": "a2a61adc-10d2-48af-b781-ef74a736f531", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3d634af-6edf-46eb-8480-c95aacdf23ff", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "ae287caa21a0afceb70403a715cc7b09573b55ebd42cab6b1e58d610edea1ad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79c45110-266b-4cdb-9c53-b3edc05f53da", "node_type": "1", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "cdb1c918f9531f536e45af27be99b91425c9bf585a5126d1cc2910572628280e", "class_name": "RelatedNodeInfo"}}, "text": "'properties': {\r\n                'SystemGenerators.MaxCapacity': 1000.0,\r\n                'SystemGenerators.MinStableLevel': 900.0,\r\n                'SystemGenerators.HeatRate': 10.0,\r\n                'SystemGenerators.StartCost': 500000.0,\r\n                'SystemGenerators.MinUpTime': 48.0,\r\n                'SystemGenerators.MinDownTime': 24.0,\r\n            }\r\n        },\r\n        'gas': {\r\n            'fuel': 'Natural Gas',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 500.0,\r\n                'SystemGenerators.MinStableLevel': 100.0,\r\n                'SystemGenerators.HeatRate': 8.0,\r\n                'SystemGenerators.StartCost': 100000.0,\r\n                'SystemGenerators.MinUpTime': 4.0,\r\n                'SystemGenerators.MinDownTime': 2.0,\r\n            }\r\n        },\r\n        'coal': {\r\n            'fuel': 'Coal',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 800.0,\r\n                'SystemGenerators.MinStableLevel': 200.0,\r\n                'SystemGenerators.HeatRate': 11.0,\r\n                'SystemGenerators.StartCost': 300000.0,\r\n                'SystemGenerators.MinUpTime': 12.0,\r\n                'SystemGenerators.MinDownTime': 8.0,\r\n            }\r\n        },\r\n        'solar': {\r\n            'fuel': 'None',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 50.0,\r\n                'SystemGenerators.MinStableLevel': 0.0,\r\n                'SystemGenerators.HeatRate': 0.0,\r\n                'SystemGenerators.StartCost': 0.0,\r\n                'SystemGenerators.MinUpTime': 0.0,\r\n                'SystemGenerators.MinDownTime': 0.0,\r\n            }\r\n        },\r\n        'wind': {\r\n            'fuel': 'None',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 100.0,\r\n                'SystemGenerators.MinStableLevel': 0.0,\r\n                'SystemGenerators.HeatRate': 0.0,\r\n                'SystemGenerators.StartCost': 0.0,\r\n                'SystemGenerators.MinUpTime': 0.0,\r\n                'SystemGenerators.MinDownTime': 0.0,\r\n            }\r\n        },\r\n        'oil': {\r\n            'fuel': 'Oil',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 600.0,\r\n                'SystemGenerators.MinStableLevel': 100.0,\r\n                'SystemGenerators.HeatRate': 9.0,\r\n                'SystemGenerators.StartCost': 200000.0,\r\n                'SystemGenerators.MinUpTime': 6.0,\r\n                'SystemGenerators.MinDownTime': 4.0,\r\n            }\r\n        },\r\n        'geothermal': {\r\n            'fuel': 'Geothermal',\r\n            'properties': {\r\n                'SystemGenerators.MaxCapacity': 70.0,\r\n                'SystemGenerators.MinStableLevel': 50.0,\r\n                'SystemGenerators.HeatRate': 0.0,\r\n                'SystemGenerators.StartCost': 100000.0,\r\n                'SystemGenerators.MinUpTime': 10.0,\r\n                'SystemGenerators.MinDownTime': 5.0,\r\n            }\r\n        }\r\n    }\r\n\r\n    for gen_type, properties in generator_properties.items():\r\n        modified_file_path = f'{file_path[:-4]}_{gen_type}.xml'\r\n        copyfile(file_path, modified_file_path)\r\n        db = connect_to_database(modified_file_path)\r\n        add_generator(db, f'API_{gen_type.capitalize()}Gen', gen_type, properties)\r\n        close_database(db)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```", "mimetype": "text/plain", "start_char_idx": 3472, "end_char_idx": 6846, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d9f919d-62eb-47aa-99a3-58fca3aa84c3": {"__data__": {"id_": "5d9f919d-62eb-47aa-99a3-58fca3aa84c3", "embedding": null, "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2dbc25b2-0aeb-478c-a5ad-6dce6620e3f7", "node_type": "4", "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}, "hash": "fcd7cbf09a0fccad4b8d94ed870591895efe63cb8f9a01ece555f85188ebd7b6", "class_name": "RelatedNodeInfo"}}, "text": "Summary of What Was Learned\n\r\n1. **Connecting to PLEXOS Database**:\r\n   - Learned how to connect to a PLEXOS database and handle the connection lifecycle.\r\n   - Importance of closing the database connection to avoid memory leaks.\r\n\r\n2. **Adding Categories, Objects, and Memberships**:\r\n   - How to check if a category exists and add it if it doesn't.\r\n   - Adding objects to a database and creating system memberships.\r\n   - Adding memberships between objects.\r\n\r\n3. **Adding Properties to Generators**:\r\n   - Adding properties to objects and handling potential issues like missing properties or unsupported property types.\r\n   - Importance of critical properties like 'Units' for generators.\r\n\r\n4. **Generating Multiple PLEXOS XML Files**:\r\n   - Looping through different generator configurations and creating a new XML file for each configuration.\r\n   - Ensuring the generated files are correctly modified and saved.\r\n\r\n5. **Debugging and Error Handling**:\r\n   - Importance of debugging print statements to verify the fetched data.\r\n   - Implementing error handling to manage issues like missing classes or properties.\r\n\r\nThis comprehensive guide and the script provide a solid foundation for building, modifying, and running PLEXOS models using the PLEXOS API in Python. It ensures that the process is repeatable, maintainable, and understandable for both humans and an LLM being fine-tuned to work with PLEXOS API.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"9692028c-4835-4831-8962-2186c4132bf2": {"node_ids": ["54703e97-4080-4f65-b139-e137eed358da"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "8c7045ea-93bd-4335-864f-e3dc00bb30dc": {"node_ids": ["2faed600-106e-4ad4-b51b-c2eb63943cd0"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "6f48a233-66d3-4a18-bd24-8b5138e913c2": {"node_ids": ["1fea5416-ad32-40ed-8825-8882d06c7f9d"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "52ed7ec3-007b-4e3e-9f22-8bfd3023a5e0": {"node_ids": ["121fad45-7bb3-40d7-9478-cc3b6b49fc2a"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "13ceb073-301a-4863-b0dc-9b0edef12e50": {"node_ids": ["c3021ce6-331c-4b69-9317-923f2b61d439"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "d5c14032-d54d-45c8-95a4-f5409c4d628e": {"node_ids": ["e75784ce-a552-454f-8c42-4add859421e8"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "0c498490-5d94-4b0d-a7e1-3c52e132d381": {"node_ids": ["4d003780-9b05-4c27-9eb1-212487b17640"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "a3d634af-6edf-46eb-8480-c95aacdf23ff": {"node_ids": ["79c45110-266b-4cdb-9c53-b3edc05f53da", "a2a61adc-10d2-48af-b781-ef74a736f531"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}, "2dbc25b2-0aeb-478c-a5ad-6dce6620e3f7": {"node_ids": ["5d9f919d-62eb-47aa-99a3-58fca3aa84c3"], "metadata": {"file_path": "C:\\Users\\alejandro.elenes\\Documents\\GitHub\\ToyModelswithChatGPT\\context_for_ChatGPT\\PLEXOS model building with PLEXOS API.md", "file_name": "PLEXOS model building with PLEXOS API.md", "file_size": 13487, "creation_date": "2024-08-01", "last_modified_date": "2024-07-31"}}}}